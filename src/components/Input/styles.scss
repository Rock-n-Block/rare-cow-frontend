@import 'src/assets/styles/variables';
@import 'src/assets/styles/mixins';
@import 'src/styles/helpers';

.input-wrapper {
  @include flex(column, flex-start, flex-start);
  &:hover:not(.input-disabled):not(.input-error):not(.input-success) {
    .input {
      &-label {
        color: var(--input-hover-label);
      }
      &-body {
        background: var(--input-hover-background);
        @include border-like-shadow(var(--input-hover-width), var(--input-hover-border));
        .textarea,
        .input {
          caret-color: var(--input-hover-caret);
          color: var(--input-hover-color);
          .input-startAdornment,
          .input-endAdornment {
            svg {
              path {
                fill: var(--input-hover-icon);
              }
            }
          }
        }
      }
      &-caption {
        color: var(--input-hover-label);
      }
    }
  }
  &.input {
    &-in-focus {
      .input {
        &-label {
          color: var(--input-focus-label);
        }
        &-body {
          background: var(--input-focus-background);
          @include border-like-shadow(var(--input-focus-width), var(--input-focus-border));
          .textarea,
          .input {
            caret-color: var(--input-focus-caret);
            color: var(--input-focus-color);
            .input-startAdornment,
            .input-endAdornment {
              svg {
                path {
                  fill: var(--input-focus-icon);
                }
              }
            }
          }
        }
        &-caption {
          color: var(--input-focus-label);
        }
      }
    }
    &-disabled {
      opacity: 0.5;
      .input {
        &-label {
          color: var(--input-disabled-label);
        }
        &-body {
          .textarea,
          .input {
            pointer-events: none;
            caret-color: var(--input-disabled-caret);
            color: var(--input-disabled-color);
            .input-startAdornment,
            .input-endAdornment {
              svg {
                path {
                  fill: var(--input-disabled-icon);
                }
              }
            }
          }
        }
        &-caption {
          color: var(--input-disabled-label);
        }
      }
    }
    &-success {
      .input {
        &-label {
          color: var(--input-success-label);
        }
        &-body {
          background: var(--input-success-background);
          @include border-like-shadow(var(--input-success-width), var(--input-success-border));
          .textarea,
          .input {
            caret-color: var(--input-success-caret);
            color: var(--input-success-color);
            .input-startAdornment,
            .input-endAdornment {
              svg {
                path {
                  fill: var(--input-success-icon);
                }
              }
            }
          }
        }
        &-caption {
          color: var(--input-success-label);
        }
      }
    }
    &-error {
      .input {
        &-label {
          color: var(--input-error-label);
        }
        &-body {
          background: var(--input-error-background);
          @include border-like-shadow(var(--input-error-width), var(--input-error-border));
          .textarea,
          .input {
            caret-color: var(--input-error-caret);
            color: var(--input-error-color);
            .input-startAdornment,
            .input-endAdornment {
              svg {
                path {
                  fill: var(--input-error-icon);
                }
              }
            }
          }
        }
        &-caption {
          color: var(--input-error-label);
        }
      }
    }
    &-sm {
      .input {
        &-body {
          padding: space(10, 16);
          font-size: 16px;
          line-height: 24px;
          &.textarea-body {
            padding: space(10, 10, 10, 16);
          }
        }
      }
    }
    &-md {
      .input {
        &-body {
          padding: space(10, 16);
          font-size: 16px;
          line-height: 24px;
          &.textarea-body {
            padding: space(10, 10, 10, 16);
          }
        }
      }
    }
  }
  .input {
    &-label {
      color: var(--input-default-label);
      &-text {
        color: inherit;
        font-size: 16px;
        line-height: 24px;
        margin-bottom: space(8);
      }
    }
    &-body {
      background: var(--input-default-background);
      @include border-like-shadow(var(--input-default-width), var(--input-default-border));
      @include border-radius('input');
      @include transition;
      @include flex(row, center, flex-start);
      .textarea,
      .input {
        appearance: none;
        border: 0px solid transparent;
        background: transparent;
        outline: none;
        height: 100%;
        color: var(--input-default-color);
        @include transition;
        &::placeholder {
          color: inherit;
        }
      }
      .input-startAdornment,
      .input-endAdornment {
        width: 1em;
        height: 1em;
        svg {
          width: 100%;
          height: 100%;
          transform: scale(1.2);
          path {
            @include transition;
            &[stroke] {
              stroke: var(--input-default-icon);
            }
            &[fill] {
              fill: var(--input-default-icon);
            }
          }
        }
      }
      .input-startAdornment {
        margin-right: space(15);
      }
      .input-endAdornment {
        margin-left: space(15);
      }
      .textarea {
        max-width: 100%;
        resize: vertical;
        &::-webkit-resizer {
          border: none;
          content: '';
          background: url('../../assets/resizer.svg') no-repeat top left;
          width: 8px;
          height: 8px;
        }
      }
    }
    &-caption {
      display: inline-block;
      margin-top: space(8);
    }
  }
}
