@import 'src/assets/styles/variables';
@import 'src/assets/styles/mixins';
@import 'src/styles/helpers';

.button {
  width: fit-content;
  cursor: pointer;
  border-radius: 8px;
  @include flexbox();
  @include transition;
  &:focus {
    outline: none;
  }
  &:disabled {
    pointer-events: none;
  }

  & .endAdornment {
    display: inherit;
    svg {
      width: 1em;
      height: 1rem;
      * {
        fill: currentColor;
        @include transition(0ms);
      }
    }
  }
  & .startAdornment {
    display: inherit;
    svg {
      width: 1em;
      height: 1rem;
      * {
        fill: currentColor;
        @include transition(0ms);
      }
    }
  }

  &.outlined {
    //common
    &-common {
      background: var(--button-outlined-default-background);
      color: var(--button-outlined-default-color);
      @include border-like-shadow(
        var(--button-outlined-default-border-width),
        var(--button-outlined-default-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-outlined-default-icon-color);
      }

      background-origin: border-box;

      &:focus {
        background: var(--button-outlined-focus-background);
        color: var(--button-outlined-focus-color);
        @include border-like-shadow(
          var(--button-outlined-focus-border-width),
          var(--button-outlined-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-focus-icon-color);
        }
      }

      &:hover {
        background: var(--button-outlined-hover-background);
        color: var(--button-outlined-hover-color);
        @include border-like-shadow(
          var(--button-outlined-hover-border-width),
          var(--button-outlined-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-outlined-active-background);
        color: var(--button-outlined-active-color);
        @include border-like-shadow(
          var(--button-outlined-active-border-width),
          var(--button-outlined-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-active-icon-color);
        }
      }
      &:disabled {
        background: var(--button-outlined-disabled-background);
        color: var(--button-outlined-disabled-color);
        opacity: 0.45;
        @include border-like-shadow(
          var(--button-outlined-disabled-border-width),
          var(--button-outlined-disabled-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-disabled-icon-color);
        }
      }
    }

    //primary
    &-primary {
      background: var(--button-outlined-primary-background);
      color: var(--button-outlined-primary-color);
      @include border-like-shadow(
        var(--button-outlined-primary-border-width),
        var(--button-outlined-primary-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-outlined-primary-icon-color);
      }

      background-origin: border-box;

      &:focus {
        background: var(--button-outlined-primary-focus-background);
        color: var(--button-outlined-primary-focus-color);
        @include border-like-shadow(
          var(--button-outlined-primary-focus-border-width),
          var(--button-outlined-primary-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-primary-focus-icon-color);
        }
      }

      &:hover {
        background: var(--button-outlined-primary-hover-background);
        color: var(--button-outlined-primary-hover-color);
        @include border-like-shadow(
          var(--button-outlined-primary-hover-border-width),
          var(--button-outlined-primary-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-primary-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-outlined-primary-active-background);
        color: var(--button-outlined-primary-active-color);
        @include border-like-shadow(
          var(--button-outlined-primary-active-border-width),
          var(--button-outlined-primary-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-primary-active-icon-color);
        }
      }
      &:disabled {
        background: var(--button-outlined-primary-disabled-background);
        color: var(--button-outlined-primary-disabled-color);
        opacity: 0.45;
        @include border-like-shadow(
          var(--button-outlined-primary-disabled-border-width),
          var(--button-outlined-primary-disabled-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-outlined-primary-disabled-icon-color);
        }
      }
    }
  }

  &.filled {
    background-origin: border-box;

    //common
    &-common {
      background: var(--button-filled-default-background);
      color: var(--button-filled-default-color);
      @include border-like-shadow(
        var(--button-filled-default-border-width),
        var(--button-filled-default-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-filled-default-icon-color);
      }

      &:focus {
        background: var(--button-filled-focus-background);
        color: var(--button-filled-focus-color);
        @include border-like-shadow(
          var(--button-filled-focus-border-width),
          var(--button-filled-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-focus-icon-color);
        }
      }

      &:hover {
        background: var(--button-filled-hover-background);
        color: var(--button-filled-hover-color);
        @include border-like-shadow(
          var(--button-filled-hover-border-width),
          var(--button-filled-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-filled-active-background);
        color: var(--button-filled-active-color);
        @include border-like-shadow(
          var(--button-filled-active-border-width),
          var(--button-filled-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-active-icon-color);
        }
      }

      &:disabled {
        background: var(--button-filled-disabled-background);
        color: var(--button-filled-disabled-color);
        @include border-like-shadow(
          var(--button-filled-disabled-border-width),
          var(--button-filled-disabled-border)
        );
        opacity: 0.45;
        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-disabled-icon-color);
        }
      }
    }

    //primary
    &-primary {
      background: var(--button-filled-primary-background);
      color: var(--button-filled-primary-color);
      @include border-like-shadow(
        var(--button-filled-primary-border-width),
        var(--button-filled-primary-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-filled-primary-icon-color);
      }

      &:focus {
        background: var(--button-filled-primary-focus-background);
        color: var(--button-filled-primary-focus-color);
        @include border-like-shadow(
          var(--button-filled-primary-focus-border-width),
          var(--button-filled-primary-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-primary-focus-icon-color);
        }
      }

      &:hover {
        background: var(--button-filled-primary-hover-background);
        color: var(--button-filled-primary-hover-color);
        @include border-like-shadow(
          var(--button-filled-primary-hover-border-width),
          var(--button-filled-primary-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-primary-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-filled-primary-active-background);
        color: var(--button-filled-primary-active-color);
        @include border-like-shadow(
          var(--button-filled-primary-active-border-width),
          var(--button-filled-primary-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-primary-active-icon-color);
        }
      }

      &:disabled {
        background: var(--button-filled-primary-disabled-background);
        color: var(--button-filled-primary-disabled-color);
        @include border-like-shadow(
          var(--button-filled-primary-disabled-border-width),
          var(--button-filled-primary-disabled-border)
        );
        opacity: 0.45;
        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-primary-disabled-icon-color);
        }
      }
    }

    //secondary
    &-secondary {
      background: var(--button-filled-secondary-background);
      color: var(--button-filled-secondary-color);
      @include border-like-shadow(
        var(--button-filled-secondary-border-width),
        var(--button-filled-secondary-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        stroke: var(--button-filled-secondary-icon-color);
        fill: transparent;
      }

      &:focus {
        background: var(--button-filled-secondary-focus-background);
        color: var(--button-filled-secondary-focus-color);
        @include border-like-shadow(
          var(--button-filled-secondary-focus-border-width),
          var(--button-filled-secondary-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: var(--button-filled-secondary-icon-color);
          fill: transparent;
        }
      }

      &:hover {
        background: var(--button-filled-secondary-hover-background);
        color: var(--button-filled-secondary-hover-color);
        @include border-like-shadow(
          var(--button-filled-secondary-hover-border-width),
          var(--button-filled-secondary-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: transparent;
          fill: var(--button-filled-secondary-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-filled-secondary-active-background);
        color: var(--button-filled-secondary-active-color);
        @include border-like-shadow(
          var(--button-filled-secondary-active-border-width),
          var(--button-filled-secondary-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: var(--button-filled-secondary-active-icon-color);
          fill: transparent;
        }
      }

      &:disabled {
        background: var(--button-filled-secondary-disabled-background);
        color: var(--button-filled-secondary-disabled-color);
        @include border-like-shadow(
          var(--button-filled-secondary-disabled-border-width),
          var(--button-filled-secondary-disabled-border)
        );
        opacity: 0.45;
        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-secondary-disabled-icon-color);
        }
      }
    }

    //tertiary
    &-tertiary {
      background: var(--button-filled-tertiary-background);
      color: var(--button-filled-tertiary-color);
      @include border-like-shadow(
        var(--button-filled-tertiary-border-width),
        var(--button-filled-tertiary-border)
      );

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        stroke: var(--button-filled-tertiary-icon-color);
        fill: transparent;
      }

      &:focus {
        background: var(--button-filled-tertiary-focus-background);
        color: var(--button-filled-tertiary-focus-color);
        @include border-like-shadow(
          var(--button-filled-tertiary-focus-border-width),
          var(--button-filled-tertiary-focus-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: var(--button-filled-tertiary-icon-color);
          fill: transparent;
        }
      }

      &:hover {
        background: var(--button-filled-tertiary-hover-background);
        color: var(--button-filled-tertiary-hover-color);
        @include border-like-shadow(
          var(--button-filled-tertiary-hover-border-width),
          var(--button-filled-tertiary-hover-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: transparent;
          fill: var(--button-filled-tertiary-hover-icon-color);
        }
      }

      &.active,
      &:active {
        background: var(--button-filled-tertiary-active-background);
        color: var(--button-filled-tertiary-active-color);
        @include border-like-shadow(
          var(--button-filled-tertiary-active-border-width),
          var(--button-filled-tertiary-active-border)
        );

        .startAdornment > svg > path,
        .endAdornment > svg > path {
          stroke: var(--button-filled-tertiary-active-icon-color);
          fill: transparent;
        }
      }

      &:disabled {
        background: var(--button-filled-tertiary-disabled-background);
        color: var(--button-filled-tertiary-disabled-color);
        @include border-like-shadow(
          var(--button-filled-tertiary-disabled-border-width),
          var(--button-filled-tertiary-disabled-border)
        );
        opacity: 0.45;
        .startAdornment > svg > path,
        .endAdornment > svg > path {
          fill: var(--button-filled-tertiary-disabled-icon-color);
        }
      }
    }
  }

  &.text {
    background: transparent !important;
    color: var(--typography-default-color);
    border: none;
    padding: 0 !important;
    margin: 0;

    &:hover:not(.disabled) {
      filter: brightness(80%);
    }
  }

  &.disabled {
    background: var(--button-disabled-background);
    color: var(--button-disabled-color);
    cursor: not-allowed;

    .startAdornment > svg > path,
    .endAdornment > svg > path {
      fill: var(--button-outlined-disabled-icon-color);
    }

    &:hover {
      background: var(--button-disabled-background);
      color: var(--button-disabled-color);
      border: none;

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-outlined-disabled-icon-color);
      }
    }

    &:active {
      background: var(--button-disabled-background);
      color: var(--button-disabled-color);
      border: none;

      .startAdornment > svg > path,
      .endAdornment > svg > path {
        fill: var(--button-outlined-disabled-icon-color);
      }
    }
  }

  .startAdornment {
    display: flex;
    margin-right: spacing(1.25);
  }

  .endAdornment {
    display: flex;
    margin-left: spacing(1.25);
  }

  &.lg {
    padding: spacing(2, 4);
    font-weight: 600;
    font-size: 18px;
    line-height: 24px;

    &.endAdornmentPadding {
      padding: spacing(2, 2, 2, 3);
    }
    &.startAdornmentPadding {
      padding: spacing(2, 3, 2, 2);
    }
    &.bothAdornmentsPadding {
      padding: spacing(2);
    }
  }

  &.md {
    padding: spacing(1.25, 2.75);
    font-weight: 600;
    font-size: 14px;
    line-height: 24px;

    &.endAdornmentPadding {
      padding: spacing(1.25, 2.75);
    }
    &.startAdornmentPadding {
      padding: spacing(1.25, 2.75);
    }
    &.bothAdornmentsPadding {
      padding: spacing(1.25, 2.75);
    }
  }

  &.sm {
    padding: spacing(0.875, 2);
    font-weight: 500;
    font-size: 14px;
    line-height: 16px;

    &.endAdornmentPadding {
      padding: spacing(0.875, 2);
    }
    &.startAdornmentPadding {
      padding: spacing(0.875, 2);
    }
    &.bothAdornmentsPadding {
      padding: spacing(0.875, 2);
    }
  }
}

.icon {
  width: fit-content;
  cursor: pointer;
  border-radius: 50%;
  padding: 1em;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  svg {
    width: 1em;
    height: 1em;
  }

  &.outlined {
    &-common {
      background: var(--icon-button-outlined-default-background);
      border: $button-border-width solid var(--icon-button-outlined-default-border);

      & > svg > path {
        fill: var(--icon-button-outlined-default-icon-color);
        @include transition;
      }

      &:hover {
        background: var(--icon-button-outlined-hover-background);
        border: $button-border-width solid var(--icon-button-outlined-hover-border);

        & > svg > path {
          fill: var(--icon-button-outlined-hover-icon-color);
        }
      }

      &:active {
        background: var(--icon-button-outlined-active-background);
        border: $button-border-width solid var(--icon-button-outlined-active-border);

        & > svg > path {
          fill: var(--icon-button-outlined-active-icon-color);
        }
      }

      &:disabled {
        background: var(--icon-button-outlined-default-background);
        border: $button-border-width solid var(--icon-button-outlined-default-border);
        opacity: 0.45;
        pointer-events: none;

        & > svg > path {
          fill: var(--icon-button-outlined-secondary-disabled-icon-color);
        }
      }
    }
  }

  &.text {
    &-common {
      background: transparent;
      border: 0px solid transparent;

      & > svg > path {
        fill: transparent;
        stroke: var(--icon-button-outlined-default-icon-color);
        @include transition;
      }

      &:hover {
        background: var(--icon-button-outlined-hover-background);
        border: $button-border-width solid var(--icon-button-outlined-hover-border);

        & > svg > path {
          stroke: var(--icon-button-outlined-hover-icon-color);
        }
      }

      &:active {
        background: var(--icon-button-outlined-active-background);
        border: $button-border-width solid var(--icon-button-outlined-active-border);

        & > svg > path {
          stroke: var(--icon-button-outlined-active-icon-color);
        }
      }

      &:disabled {
        background: var(--icon-button-outlined-default-background);
        border: $button-border-width solid var(--icon-button-outlined-default-border);
        opacity: 0.45;
        pointer-events: none;

        & > svg > path {
          stroke: var(--icon-button-outlined-secondary-disabled-icon-color);
        }
      }
    }
  }

  &.filled {
    &-common {
      background: var(--icon-button-filled-default-background);
      border: $button-border-width solid var(--icon-button-filled-default-border);

      & > svg > path {
        fill: var(--icon-button-filled-default-icon-color);
        @include transition;
      }

      &:hover {
        background: var(--icon-button-filled-hover-background);
        border: $button-border-width solid var(--icon-button-filled-hover-border);

        & > svg > path {
          fill: var(--icon-button-filled-hover-icon-color);
        }
      }

      &:active {
        background: var(--icon-button-filled-active-background);
        border: $button-border-width solid var(--icon-button-filled-active-border);

        & > svg > path {
          fill: var(--icon-button-filled-active-icon-color);
        }
      }

      &:disabled {
        background: var(--icon-button-filled-disabled-background);
        opacity: 0.45;
        pointer-events: none;

        & > svg > path {
          fill: var(--icon-button-filled-disabled-icon-color);
        }
      }
    }
  }
}
